{"ast":null,"code":"var _jsxFileName = \"D:\\\\IPR Version 1\\\\Admin\\\\client\\\\src\\\\components\\\\Calendar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Calendar = ({\n  onSelectDates,\n  selectedDates\n}) => {\n  _s();\n  const [currentDate, setCurrentDate] = useState(new Date());\n\n  // Update parent component with selected dates on mount and whenever `selectedDates` changes\n  useEffect(() => {\n    onSelectDates(selectedDates);\n  }, [selectedDates, onSelectDates]);\n\n  // Function to render the calendar days with selected dates highlighted\n  const renderCalendar = () => {\n    const year = currentDate.getFullYear();\n    const month = currentDate.getMonth();\n    const firstDay = new Date(year, month, 1);\n    const lastDay = new Date(year, month + 1, 0);\n    const days = [];\n\n    // Render blank days for the start of the month\n    for (let i = 0; i < firstDay.getDay(); i++) {\n      days.push(/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"day w-full h-12\"\n      }, `empty-${i}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this));\n    }\n\n    // Render each day with selection highlighting\n    for (let day = 1; day <= lastDay.getDate(); day++) {\n      const date = new Date(year, month, day);\n      const dateString = date.toISOString().split('T')[0];\n      const isSelected = selectedDates.some(d => d === dateString); // Check if the date is in selectedDates\n\n      days.push(/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `day w-full h-12 flex items-center justify-center cursor-pointer transition duration-300 ease-in-out \n            ${isSelected ? 'bg-red-300' : 'bg-gray-300 hover:bg-red-400'}`,\n        onClick: () => toggleDate(dateString),\n        children: day\n      }, day, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this));\n    }\n    return days;\n  };\n\n  // Function to toggle the selected state of a date\n  const toggleDate = dateString => {\n    let updatedDates;\n    if (selectedDates.includes(dateString)) {\n      updatedDates = selectedDates.filter(d => d !== dateString); // Remove date if already selected\n    } else {\n      updatedDates = [...selectedDates, dateString]; // Add date if not selected\n    }\n    onSelectDates(updatedDates); // Update parent with new dates array\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-nav flex justify-between items-center mb-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"py-1 px-2 bg-gray-800 text-white rounded hover:bg-blue-800\",\n        onClick: () => setCurrentDate(new Date(currentDate.setMonth(currentDate.getMonth() - 1))),\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-lg\",\n        children: currentDate.toLocaleString('default', {\n          month: 'long',\n          year: 'numeric'\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"py-1 px-2 bg-gray-800 text-white rounded hover:bg-blue-800\",\n        onClick: () => setCurrentDate(new Date(currentDate.setMonth(currentDate.getMonth() + 1))),\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar grid grid-cols-7 gap-1 mt-5\",\n      children: renderCalendar()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(Calendar, \"zLLOHWi+1oI1QEyVIaMRDWNuVqU=\");\n_c = Calendar;\nexport default Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Calendar","onSelectDates","selectedDates","_s","currentDate","setCurrentDate","Date","renderCalendar","year","getFullYear","month","getMonth","firstDay","lastDay","days","i","getDay","push","className","fileName","_jsxFileName","lineNumber","columnNumber","day","getDate","date","dateString","toISOString","split","isSelected","some","d","onClick","toggleDate","children","updatedDates","includes","filter","setMonth","toLocaleString","_c","$RefreshReg$"],"sources":["D:/IPR Version 1/Admin/client/src/components/Calendar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst Calendar = ({ onSelectDates, selectedDates }) => {\r\n  const [currentDate, setCurrentDate] = useState(new Date());\r\n\r\n  // Update parent component with selected dates on mount and whenever `selectedDates` changes\r\n  useEffect(() => {\r\n    onSelectDates(selectedDates);\r\n  }, [selectedDates, onSelectDates]);\r\n\r\n  // Function to render the calendar days with selected dates highlighted\r\n  const renderCalendar = () => {\r\n    const year = currentDate.getFullYear();\r\n    const month = currentDate.getMonth();\r\n    const firstDay = new Date(year, month, 1);\r\n    const lastDay = new Date(year, month + 1, 0);\r\n    const days = [];\r\n\r\n    // Render blank days for the start of the month\r\n    for (let i = 0; i < firstDay.getDay(); i++) {\r\n      days.push(<div key={`empty-${i}`} className=\"day w-full h-12\"></div>);\r\n    }\r\n\r\n    // Render each day with selection highlighting\r\n    for (let day = 1; day <= lastDay.getDate(); day++) {\r\n      const date = new Date(year, month, day);\r\n      const dateString = date.toISOString().split('T')[0];\r\n      const isSelected = selectedDates.some(d => d === dateString); // Check if the date is in selectedDates\r\n\r\n      days.push(\r\n        <div\r\n          key={day}\r\n          className={`day w-full h-12 flex items-center justify-center cursor-pointer transition duration-300 ease-in-out \r\n            ${isSelected ? 'bg-red-300' : 'bg-gray-300 hover:bg-red-400'}`}\r\n          onClick={() => toggleDate(dateString)}\r\n        >\r\n          {day}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return days;\r\n  };\r\n\r\n  // Function to toggle the selected state of a date\r\n  const toggleDate = (dateString) => {\r\n    let updatedDates;\r\n    if (selectedDates.includes(dateString)) {\r\n      updatedDates = selectedDates.filter(d => d !== dateString); // Remove date if already selected\r\n    } else {\r\n      updatedDates = [...selectedDates, dateString]; // Add date if not selected\r\n    }\r\n    onSelectDates(updatedDates); // Update parent with new dates array\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"calendar-nav flex justify-between items-center mb-2\">\r\n        <button \r\n          className=\"py-1 px-2 bg-gray-800 text-white rounded hover:bg-blue-800\"\r\n          onClick={() => setCurrentDate(new Date(currentDate.setMonth(currentDate.getMonth() - 1)))}\r\n        >\r\n          Previous\r\n        </button>\r\n        <h2 className=\"text-lg\">\r\n          {currentDate.toLocaleString('default', { month: 'long', year: 'numeric' })}\r\n        </h2>\r\n        <button \r\n          className=\"py-1 px-2 bg-gray-800 text-white rounded hover:bg-blue-800\"\r\n          onClick={() => setCurrentDate(new Date(currentDate.setMonth(currentDate.getMonth() + 1)))}\r\n        >\r\n          Next\r\n        </button>\r\n      </div>\r\n      <div className=\"calendar grid grid-cols-7 gap-1 mt-5\">\r\n        {renderCalendar()}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Calendar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}