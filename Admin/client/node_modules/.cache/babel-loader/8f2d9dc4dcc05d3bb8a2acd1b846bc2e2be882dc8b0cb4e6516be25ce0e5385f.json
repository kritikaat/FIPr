{"ast":null,"code":"/**\r\n * Performs the flattening of a data row recursively\r\n *\r\n * @param {String} separator Separator to be used as the flattened field name\r\n * @returns {Object => Object} Flattened object\r\n */\nfunction flatten({\n  objects = true,\n  arrays = false,\n  separator = '.'\n} = {}) {\n  function step(obj, flatDataRow, currentPath) {\n    Object.keys(obj).forEach(key => {\n      const newPath = currentPath ? `${currentPath}${separator}${key}` : key;\n      const value = obj[key];\n      if (objects && typeof value === 'object' && value !== null && !Array.isArray(value) && Object.prototype.toString.call(value.toJSON) !== '[object Function]' && Object.keys(value).length) {\n        step(value, flatDataRow, newPath);\n        return;\n      }\n      if (arrays && Array.isArray(value)) {\n        step(value, flatDataRow, newPath);\n        return;\n      }\n      flatDataRow[newPath] = value;\n    });\n    return flatDataRow;\n  }\n  return dataRow => step(dataRow, {});\n}\nmodule.exports = flatten;","map":{"version":3,"names":["flatten","objects","arrays","separator","step","obj","flatDataRow","currentPath","Object","keys","forEach","key","newPath","value","Array","isArray","prototype","toString","call","toJSON","length","dataRow","module","exports"],"sources":["D:/IPR Version 1/Admin/client/node_modules/json2csv/lib/transforms/flatten.js"],"sourcesContent":["/**\r\n * Performs the flattening of a data row recursively\r\n *\r\n * @param {String} separator Separator to be used as the flattened field name\r\n * @returns {Object => Object} Flattened object\r\n */\r\nfunction flatten({ objects = true, arrays = false, separator = '.' } = {}) {\r\n  function step (obj, flatDataRow, currentPath) {\r\n    Object.keys(obj).forEach((key) => {\r\n      const newPath = currentPath ? `${currentPath}${separator}${key}` : key;\r\n      const value = obj[key];\r\n\r\n      if (objects\r\n        && typeof value === 'object'\r\n        && value !== null\r\n        && !Array.isArray(value)\r\n        && Object.prototype.toString.call(value.toJSON) !== '[object Function]'\r\n        && Object.keys(value).length) {\r\n        step(value, flatDataRow, newPath);\r\n        return;\r\n      }\r\n\r\n      if (arrays && Array.isArray(value)) {\r\n        step(value, flatDataRow, newPath);\r\n        return;\r\n      }\r\n      \r\n      flatDataRow[newPath] = value;\r\n    });\r\n\r\n    return flatDataRow;\r\n  }\r\n\r\n  return dataRow => step(dataRow, {});\r\n}\r\n\r\nmodule.exports = flatten;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,OAAOA,CAAC;EAAEC,OAAO,GAAG,IAAI;EAAEC,MAAM,GAAG,KAAK;EAAEC,SAAS,GAAG;AAAI,CAAC,GAAG,CAAC,CAAC,EAAE;EACzE,SAASC,IAAIA,CAAEC,GAAG,EAAEC,WAAW,EAAEC,WAAW,EAAE;IAC5CC,MAAM,CAACC,IAAI,CAACJ,GAAG,CAAC,CAACK,OAAO,CAAEC,GAAG,IAAK;MAChC,MAAMC,OAAO,GAAGL,WAAW,GAAG,GAAGA,WAAW,GAAGJ,SAAS,GAAGQ,GAAG,EAAE,GAAGA,GAAG;MACtE,MAAME,KAAK,GAAGR,GAAG,CAACM,GAAG,CAAC;MAEtB,IAAIV,OAAO,IACN,OAAOY,KAAK,KAAK,QAAQ,IACzBA,KAAK,KAAK,IAAI,IACd,CAACC,KAAK,CAACC,OAAO,CAACF,KAAK,CAAC,IACrBL,MAAM,CAACQ,SAAS,CAACC,QAAQ,CAACC,IAAI,CAACL,KAAK,CAACM,MAAM,CAAC,KAAK,mBAAmB,IACpEX,MAAM,CAACC,IAAI,CAACI,KAAK,CAAC,CAACO,MAAM,EAAE;QAC9BhB,IAAI,CAACS,KAAK,EAAEP,WAAW,EAAEM,OAAO,CAAC;QACjC;MACF;MAEA,IAAIV,MAAM,IAAIY,KAAK,CAACC,OAAO,CAACF,KAAK,CAAC,EAAE;QAClCT,IAAI,CAACS,KAAK,EAAEP,WAAW,EAAEM,OAAO,CAAC;QACjC;MACF;MAEAN,WAAW,CAACM,OAAO,CAAC,GAAGC,KAAK;IAC9B,CAAC,CAAC;IAEF,OAAOP,WAAW;EACpB;EAEA,OAAOe,OAAO,IAAIjB,IAAI,CAACiB,OAAO,EAAE,CAAC,CAAC,CAAC;AACrC;AAEAC,MAAM,CAACC,OAAO,GAAGvB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}